{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.router.module.ts","webpack:///./src/app/demo-ui/demo-ui.component.css","webpack:///./src/app/demo-ui/demo-ui.component.html","webpack:///./src/app/demo-ui/demo-ui.component.ts","webpack:///./src/app/demo-ui/demo-ui.module.ts","webpack:///./src/app/services/demo.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRouterModule } from './app.router.module';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http'; \nimport { MatFormFieldModule, MatInputModule} from '@angular/material';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatTableModule} from '@angular/material/table';\n\nimport { DemoService } from './services/demo.service'\n\nimport { DemoUiModule } from './demo-ui/demo-ui.module';\n\n\nimport { from } from 'rxjs';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRouterModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    DemoUiModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatInputModule\n  ],\n  providers: [\n    DemoService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DemoUiComponent } from './demo-ui/demo-ui.component';\nimport { from } from 'rxjs';\n\nconst appRoutes: Routes = [\n  { path: '', pathMatch:'full', redirectTo: 'demo'},\n  { path: 'demo', component: DemoUiComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRouterModule { }\n","module.exports = \"table {\\n    width: 90%;\\n  }\\n\\n  .demo {\\n      display: flex;\\n  }\\n\\n  .list {\\n      width: 70%;\\n  }\\n\\n  form {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n\\n  .m-l-5 {\\n    margin-right: 5px;\\n  }\"","module.exports = \"<div class=\\\"demo\\\">\\n  <div class=\\\"list\\\">\\n    <h1>Demo List</h1>\\n    <table mat-table [dataSource]=\\\"demoList\\\" class=\\\"mat-elevation-z8\\\">\\n\\n      <!-- Name Column -->\\n      <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n      </ng-container>\\n\\n      <!-- type Column -->\\n      <ng-container matColumnDef=\\\"type\\\">\\n        <th mat-header-cell *matHeaderCellDef> Type </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.type}} </td>\\n      </ng-container>\\n\\n      <!-- list Column -->\\n      <ng-container matColumnDef=\\\"list\\\">\\n        <th mat-header-cell *matHeaderCellDef> List </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.list}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"action\\\">\\n        <th mat-header-cell *matHeaderCellDef> Action </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          <button mat-button  mat-raised-button color=\\\"primary\\\" (click)=\\\"editClick(element)\\\" class=\\\"m-l-5\\\">Edit</button>\\n          <button mat-button  mat-raised-button color=\\\"warn\\\" (click)=\\\"deleteDemo(element._id)\\\">Delete</button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"tableColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: tableColumns;\\\"></tr>\\n    </table>\\n  </div>\\n\\n\\n  <div>\\n    <form [formGroup]=\\\"createFrom\\\" (ngSubmit)=\\\"onSubmit(createFrom.value)\\\">\\n      <h1 *ngIf=\\\"editData._id\\\">Update</h1>\\n      <h1 *ngIf=\\\"!editData._id\\\">Create</h1>\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input formControlName=\\\"name\\\" matInput placeholder=\\\"Name\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <mat-label>Type</mat-label>\\n        <mat-select formControlName=\\\"type\\\" matNativeControl>\\n          <mat-option value=\\\"Movies\\\">Movies</mat-option>\\n          <mat-option value=\\\"Food\\\">Food</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"example-full-width\\\">\\n        <input formControlName=\\\"list\\\" matInput placeholder=\\\"Favourite list\\\">\\n      </mat-form-field>\\n\\n      <button *ngIf=\\\"!editData._id\\\" type=\\\"submit\\\" [disabled]=\\\"!createFrom.valid\\\" mat-raised-button mat-button color=\\\"primary\\\">Create</button>\\n      <button *ngIf=\\\"editData._id\\\" type=\\\"submit\\\" [disabled]=\\\"!createFrom.valid\\\"  mat-raised-button mat-button color=\\\"primary\\\">Update</button>\\n\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DemoService } from '../services/demo.service';\nimport {FormControl, Validators, FormGroup} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n  import { from } from 'rxjs';\n\nexport interface demoList {\n  _id: String,\n  name: String,\n  type: String,\n  list: String\n};\n\n@Component({\n  selector: 'app-demo-ui',\n  templateUrl: './demo-ui.component.html',\n  styleUrls: ['./demo-ui.component.css']\n})\nexport class DemoUiComponent implements OnInit {\n\n  tableColumns: String[] = ['name', 'type', 'list', 'action'];\n  demoList: Array <demoList>;\n  typeList: [\n    {\n      name: \"Movies\",\n      Value: \"Movie\"\n    },\n    {\n      name: \"Food\",\n      Value: \"Food\"\n    }\n  ];\n  editData = {};\n\n\n  createFrom: FormGroup = new FormGroup({\n    name: new FormControl('', Validators.required),\n    type: new FormControl('', Validators.required),\n    list: new FormControl('',  Validators.required)\n  })\n  constructor(private demoService: DemoService, private _snackBar: MatSnackBar) {}\n\n  ngOnInit() {\n    this.getDemoList()\n  }\n\n  //get demo  list\n  getDemoList() {\n    this.demoService.getDemoList().subscribe(res => {\n      this.demoList = res['demoList']      \n    }, err => {\n      console.log('err', err);\n    })\n  }\n\n  //edit demo data\n  editClick(data) {\n    this.editData = data;    \n    this.createFrom.setValue({\n      name: this.editData['name'],\n      type: this.editData['type'],\n      list: this.editData['list'].join(',')\n    });\n  }\n\n  //reset form\n  clearForm() {\n    this.editData = {};\n    this.createFrom.reset();\n  }\n\n  onSubmit(data) {\n    //if there is id then update\n    if (this.editData && this.editData['_id']) {\n      data['_id'] = this.editData['_id'];\n      data.list = data.list.split(',').flat()      \n      this.demoService.updateDemo(data).subscribe(res => {\n        this.getDemoList();\n        this.clearForm();\n      }, err => {\n        console.log('err', err);\n      })\n    } else {\n      //if it is new data then create\n      data.list = data.list.split(',').flat()\n      this.demoService.createDemo(data).subscribe(res => {\n        this.getDemoList();\n        this.clearForm();\n      },  err => {})\n    }\n  }\n\n  //delete demo\n  deleteDemo(id) {\n    this.demoService.deleteDemo(id).subscribe(res => {\n      this.getDemoList()\n    }, err => {\n      console.log('err', err);\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { DemoUiComponent } from './demo-ui.component';\nimport { CommonModule } from '@angular/common';  \nimport {MatTableModule, \n    MatSelectModule, \n    MatFormFieldModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatInputModule} from '@angular/material';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatSnackBarModule\n  ],\n  declarations: [DemoUiComponent],\n  providers: [],\n  exports: [\n    \n  ]\n})\nexport class DemoUiModule { }\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport { from } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DemoService {\n\n  constructor( private http: HttpClient) {\n\n  }\n\n  httpOptions= {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    }\n\n  //get demo list\n  getDemoList() {\n    const url = environment.serverUrl+'demo/list';\n    return this.http.get(url, this.httpOptions)   \n  }\n\n  //create demo\n  createDemo(data) {\n    const url = environment.serverUrl+'demo/create';\n    return this.http.post(url, data, this.httpOptions) \n  }\n\n   //update demo\n   updateDemo(data) {\n    const url = environment.serverUrl+'demo/update';\n    return this.http.put(url, data, this.httpOptions) \n  }\n\n   //de delete\n   deleteDemo(id) {\n    const url = environment.serverUrl+'demo/delete/'+id;\n    return this.http.delete(url, this.httpOptions) \n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:3000/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}